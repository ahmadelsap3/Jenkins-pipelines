@Library('sharedlib') _
pipeline {
    agent any
    parameters {
        string(name: 'DOCKER_IMAGE', defaultValue: 'my-java-app', description: 'Docker image name')
        string(name: 'DOCKER_TAG', defaultValue: 'latest', description: 'Docker image tag')
    }
    // environment block removed; use bounds in script block
    stages {
        stage('Build Jar') {
            steps {
                script {
                    def myBounds = bounds(1, 100)
                    echo "Bounds: ${myBounds}"
                }
                bat 'javac Main.java'
                bat 'jar cf app.jar Main.class'
            }
        }
        stage('Build & Push Docker') {
            parallel {
                stage('Build Docker') {
                    steps {
                        sh 'docker build -t ${params.DOCKER_IMAGE}:${params.DOCKER_TAG} .'
                    }
                }
                stage('Docker Login & Push') {
                    steps {
                        sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                        sh 'docker push ${params.DOCKER_IMAGE}:${params.DOCKER_TAG}'
                    }
                }
            }
        }
    }
    post {
        always {
            sh 'docker rmi ${params.DOCKER_IMAGE}:${params.DOCKER_TAG} || true'
            sh 'rm -f Main.class app.jar'
        }
    }
}
